{"version":3,"sources":["webpack:///./src/components/_ui/Button.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/templates/project.jsx"],"names":["ButtonContainer","colors","blue400","dimensions","maxwidthMobile","blueMarine100","blueMarine600","blue200","blue600","blue300","Button","render","this","props","children","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","onClick","Component","ProjectHeroContainer","ProjectTitle","ProjectBody","blue500","Projectslink","Link","Project","project","meta","title","project_title","text","titleTemplate","name","content","description","property","author","concat","RichText","project_hero_image","src","url","alt","project_description","to","className","data","projectContent","prismic","allProjects","edges","node","site","siteMetadata"],"mappings":"uMAKMA,EAAkB,YAAO,SAAP,sBAAH,8BAELC,IAAOC,QAFF,sKAYEC,IAAWC,eAZb,mKA8BbH,IAAOI,cA9BM,OA+BbJ,IAAOK,cA/BM,6IA2CHL,IAAOM,QA3CJ,UA4CRN,IAAOO,QA5CC,8DAiDDP,IAAOQ,QAjDN,+CAuDfC,E,kGACJC,OAAA,WACE,MAA+BC,KAAKC,MAAfA,GAArB,EAAQC,SC9DG,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDkDL,OACA,OACE,YAACnB,EAAD,aAAiByB,QAASb,KAAKC,MAAMY,SAAaZ,GAC/CD,KAAKC,MAAMC,W,GALCY,aAWNhB,O,2KE7Df,IAAMiB,EAAuB,YAAO,MAAP,qBAAH,qNAgBpBC,EAAe,YAAO,MAAP,qBAAH,4EAMZC,EAAc,YAAO,MAAP,qBAAH,kHASJ5B,IAAO6B,QATH,4DAgBT7B,IAAOI,cAhBE,OAiBTJ,IAAOK,cAjBE,8EA+BXyB,EAAe,YAAOC,OAAP,qBAAH,2EAMZC,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC1B,OACE,8BACE,YAAC,IAAD,CACEC,MAAUF,EAAQG,cAAc,GAAGC,KAA9B,qCACLC,cAAa,QAAUJ,EAAKC,MAC5BD,KAAM,CACJ,CACEK,KAAK,cACLC,QAASN,EAAKO,aAEhB,CACEC,SAAS,WACTF,QAAYP,EAAQG,cAAc,GAAGC,KAA9B,sCAET,CACEK,SAAS,iBACTF,QAASN,EAAKO,aAEhB,CACEC,SAAS,UACTF,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKS,QAEhB,CACEJ,KAAK,gBACLC,QAASN,EAAKC,OAEhB,CACEI,KAAK,sBACLC,QAASN,EAAKO,cAEhBG,OAAOV,KAEX,YAAC,IAAD,KACE,YAACP,EAAD,KAAekB,WAASnC,OAAOuB,EAAQG,gBACtCH,EAAQa,oBACP,YAACpB,EAAD,KACE,mBAAKqB,IAAKd,EAAQa,mBAAmBE,IAAKC,IAAI,UAGlD,YAACrB,EAAD,KACGiB,WAASnC,OAAOuB,EAAQiB,sBAE3B,YAACpB,EAAD,CAAcqB,GAAI,aAChB,YAAC,IAAD,CAAQC,UAAU,qBAAlB,0BAOK,sBAAe,IAAZC,EAAW,EAAXA,KACVC,EAAiBD,EAAKE,QAAQC,YAAYC,MAAM,GAAGC,KACnDxB,EAAOmB,EAAKM,KAAKC,aACvB,OAAO,YAAC5B,EAAD,CAASC,QAASqB,EAAgBpB,KAAMA","file":"component---src-templates-project-jsx-42a7fde09c58108964a1.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport colors from \"styles/colors\"\r\nimport dimensions from \"styles/dimensions\"\r\n\r\nconst ButtonContainer = styled(\"button\")`\r\n  padding: 1em 2em;\r\n  background: ${colors.blue400};\r\n  font-weight: 600;\r\n  color: white;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1rem;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  transition: background 100ms ease-in-out;\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    padding: 0.8em 1.8em;\r\n    font-size: 1em;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      135deg,\r\n      ${colors.blueMarine100} 0%,\r\n      ${colors.blueMarine600} 100%\r\n    );\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: transparent;\r\n    transition: background 100ms ease-in-out;\r\n  }\r\n\r\n  &.Button--secondary {\r\n    background: ${colors.blue200};\r\n    color: ${colors.blue600};\r\n    padding: 0.95em 1.8em;\r\n    font-size: 0.95rem;\r\n\r\n    &:hover {\r\n      background: ${colors.blue300};\r\n      transition: background 100ms ease-in-out;\r\n    }\r\n  }\r\n`\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { children, ...props } = this.props\r\n    return (\r\n      <ButtonContainer onClick={this.props.onClick} {...props}>\r\n        {this.props.children}\r\n      </ButtonContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport styled from \"@emotion/styled\"\r\nimport colors from \"styles/colors\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { RichText } from \"prismic-reactjs\"\r\nimport Button from \"components/_ui/Button\"\r\nimport Layout from \"components/Layout\"\r\n\r\nconst ProjectHeroContainer = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  overflow: hidden;\r\n  position: relative;\r\n  margin-bottom: 3.5em;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    min-width: 100%;\r\n    object-fit: cover;\r\n    vertical-align: bottom;\r\n  }\r\n`\r\n\r\nconst ProjectTitle = styled(\"div\")`\r\n  max-width: 550px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`\r\n\r\nconst ProjectBody = styled(\"div\")`\r\n  max-width: 550px;\r\n  margin: 0 auto;\r\n\r\n  a {\r\n    margin-bottom: 1.5em;\r\n    font-weight: 600;\r\n    line-height: 1.9;\r\n    text-decoration: none;\r\n    color: ${colors.blue500};\r\n  }\r\n\r\n  a:hover {\r\n    color: white;\r\n    background: linear-gradient(\r\n      135deg,\r\n      ${colors.blueMarine100} 0%,\r\n      ${colors.blueMarine600} 100%\r\n    );\r\n  }\r\n\r\n  .block-img {\r\n    margin-top: 3.5em;\r\n    margin-bottom: 0.5em;\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst Projectslink = styled(Link)`\r\n  margin-top: 3em;\r\n  display: block;\r\n  text-align: center;\r\n`\r\n\r\nconst Project = ({ project, meta }) => {\r\n  return (\r\n    <>\r\n      <Helmet\r\n        title={`${project.project_title[0].text} | Prist, Gatsby & Prismic Starter`}\r\n        titleTemplate={`%s | ${meta.title}`}\r\n        meta={[\r\n          {\r\n            name: `description`,\r\n            content: meta.description,\r\n          },\r\n          {\r\n            property: `og:title`,\r\n            content: `${project.project_title[0].text} | Prist, Gatsby & Prismic Starter`,\r\n          },\r\n          {\r\n            property: `og:description`,\r\n            content: meta.description,\r\n          },\r\n          {\r\n            property: `og:type`,\r\n            content: `website`,\r\n          },\r\n          {\r\n            name: `twitter:card`,\r\n            content: `summary`,\r\n          },\r\n          {\r\n            name: `twitter:creator`,\r\n            content: meta.author,\r\n          },\r\n          {\r\n            name: `twitter:title`,\r\n            content: meta.title,\r\n          },\r\n          {\r\n            name: `twitter:description`,\r\n            content: meta.description,\r\n          },\r\n        ].concat(meta)}\r\n      />\r\n      <Layout>\r\n        <ProjectTitle>{RichText.render(project.project_title)}</ProjectTitle>\r\n        {project.project_hero_image && (\r\n          <ProjectHeroContainer>\r\n            <img src={project.project_hero_image.url} alt=\"bees\" />\r\n          </ProjectHeroContainer>\r\n        )}\r\n        <ProjectBody>\r\n          {RichText.render(project.project_description)}\r\n        </ProjectBody>\r\n        <Projectslink to={\"/projects\"}>\r\n          <Button className=\"Button--secondary\">See other projects</Button>\r\n        </Projectslink>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ({ data }) => {\r\n  const projectContent = data.prismic.allProjects.edges[0].node\r\n  const meta = data.site.siteMetadata\r\n  return <Project project={projectContent} meta={meta} />\r\n}\r\n\r\nProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const query = graphql`\r\n  query ProjectQuery($uid: String) {\r\n    prismic {\r\n      allProjects(uid: $uid) {\r\n        edges {\r\n          node {\r\n            project_title\r\n            project_preview_description\r\n            project_preview_thumbnail\r\n            project_category\r\n            project_post_date\r\n            project_hero_image\r\n            project_description\r\n            _meta {\r\n              uid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}