{"version":3,"sources":["webpack:///./src/components/_ui/Button.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/templates/project.jsx"],"names":["ButtonContainer","colors","blue400","dimensions","maxwidthMobile","pink400","purple400","blue200","blue600","blue300","Button","render","this","props","children","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","onClick","Component","ProjectHeroContainer","grey200","ProjectTitle","ProjectBody","WorkLink","Link","Project","project","meta","title","project_title","text","titleTemplate","name","content","description","property","author","concat","RichText","project_hero_image","src","url","alt","project_description","to","className","data","projectContent","prismic","allProjects","edges","node","site","siteMetadata"],"mappings":"uMAKMA,EAAkB,YAAO,SAAP,sBAAH,8BAEHC,IAAOC,QAFJ,qKAYEC,IAAWC,eAZb,kKA4ByBH,IAAOI,QA5BhC,OA4B+CJ,IAAOK,UA5BtD,4IAuCCL,IAAOM,QAvCR,UAwCJN,IAAOO,QAxCH,8DA6CKP,IAAOQ,QA7CZ,+CAmDfC,E,kGACFC,OAAA,WACI,MAA+BC,KAAKC,MAAfA,GAArB,EAAQC,SC1DD,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,ED8CD,OACA,OACI,YAACnB,EAAD,aACIyB,QAASb,KAAKC,MAAMY,SAChBZ,GACHD,KAAKC,MAAMC,W,GAPPY,aAaNhB,O,2KE3Df,IAAMiB,EAAuB,YAAO,MAAP,qBAAH,cACR1B,IAAO2B,QADC,4JAepBC,EAAe,YAAO,MAAP,qBAAH,4EAMZC,EAAc,YAAO,MAAP,qBAAH,0HAcXC,EAAW,YAAOC,OAAP,qBAAH,2EAORC,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxB,OACI,8BACI,YAAC,IAAD,CACIC,MAAUF,EAAQG,cAAc,GAAGC,KAA9B,qCACLC,cAAa,QAAUJ,EAAKC,MAC5BD,KAAM,CACF,CACIK,KAAK,cACLC,QAASN,EAAKO,aAElB,CACIC,SAAS,WACTF,QAAYP,EAAQG,cAAc,GAAGC,KAA9B,sCAEX,CACIK,SAAS,iBACTF,QAASN,EAAKO,aAElB,CACIC,SAAS,UACTF,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASN,EAAKS,QAElB,CACIJ,KAAK,gBACLC,QAASN,EAAKC,OAElB,CACII,KAAK,sBACLC,QAASN,EAAKO,cAEpBG,OAAOV,KAEb,YAAC,IAAD,KACI,YAACN,EAAD,KACKiB,WAASnC,OAAOuB,EAAQG,gBAE5BH,EAAQa,oBACL,YAACpB,EAAD,KACI,mBAAKqB,IAAKd,EAAQa,mBAAmBE,IAAKC,IAAI,UAGtD,YAACpB,EAAD,KACKgB,WAASnC,OAAOuB,EAAQiB,qBACzB,YAACpB,EAAD,CAAUqB,GAAI,SACV,YAAC,IAAD,CAAQC,UAAU,qBAAlB,uBAUT,sBAAe,IAAZC,EAAW,EAAXA,KACRC,EAAiBD,EAAKE,QAAQC,YAAYC,MAAM,GAAGC,KACnDxB,EAAOmB,EAAKM,KAAKC,aACvB,OACI,YAAC5B,EAAD,CAASC,QAASqB,EAAgBpB,KAAMA","file":"component---src-templates-project-jsx-f4ac6c274573f3acc34c.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"styles/colors\";\r\nimport dimensions from \"styles/dimensions\";\r\n\r\nconst ButtonContainer = styled(\"button\")`\r\n    padding: 1em 2em;\r\n    background: ${colors.blue400};\r\n    font-weight: 600;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n    border-radius: 2px;\r\n    position: relative;\r\n    transition: background 100ms ease-in-out;\r\n\r\n    @media(max-width:${dimensions.maxwidthMobile}px) {\r\n        padding: 0.8em 1.8em;\r\n        font-size: 1em;\r\n    }\r\n\r\n    p {\r\n        margin: 0;\r\n    }\r\n\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(135deg, ${colors.pink400} 0%, ${colors.purple400} 100%);\r\n        z-index: -1;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: transparent;\r\n        transition: background 100ms ease-in-out;\r\n    }\r\n\r\n    &.Button--secondary {\r\n        background: ${colors.blue200};\r\n        color: ${colors.blue600};\r\n        padding: 0.95em 1.8em;\r\n        font-size: 0.95rem;\r\n\r\n        &:hover {\r\n            background: ${colors.blue300};\r\n            transition: background 100ms ease-in-out;\r\n        }\r\n    }\r\n`\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        const { children, ...props } = this.props;\r\n        return (\r\n            <ButtonContainer\r\n                onClick={this.props.onClick}\r\n                {...props}>\r\n                {this.props.children}\r\n            </ButtonContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"styles/colors\";\r\nimport { Link, graphql } from 'gatsby';\r\nimport { RichText } from \"prismic-reactjs\";\r\nimport Button from \"components/_ui/Button\";\r\nimport Layout from \"components/Layout\";\r\n\r\nconst ProjectHeroContainer = styled(\"div\")`\r\n    background: ${colors.grey200};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    overflow: hidden;\r\n    position: relative;\r\n    padding-top: 2.25em;\r\n    margin-bottom: 3.5em;\r\n\r\n    img {\r\n        max-width: 600px;\r\n    }\r\n`\r\n\r\nconst ProjectTitle = styled(\"div\") `\r\n    max-width: 550px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`\r\n\r\nconst ProjectBody = styled(\"div\")`\r\n    max-width: 550px;\r\n    margin: 0 auto;\r\n\r\n    .block-img {\r\n        margin-top: 3.5em;\r\n        margin-bottom: 0.5em;\r\n\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nconst WorkLink = styled(Link)`\r\n    margin-top: 3em;\r\n    display: block;\r\n    text-align: center;\r\n`\r\n\r\n\r\nconst Project = ({ project, meta }) => {\r\n    return (\r\n        <>\r\n            <Helmet\r\n                title={`${project.project_title[0].text} | Prist, Gatsby & Prismic Starter`}\r\n                titleTemplate={`%s | ${meta.title}`}\r\n                meta={[\r\n                    {\r\n                        name: `description`,\r\n                        content: meta.description,\r\n                    },\r\n                    {\r\n                        property: `og:title`,\r\n                        content: `${project.project_title[0].text} | Prist, Gatsby & Prismic Starter`,\r\n                    },\r\n                    {\r\n                        property: `og:description`,\r\n                        content: meta.description,\r\n                    },\r\n                    {\r\n                        property: `og:type`,\r\n                        content: `website`,\r\n                    },\r\n                    {\r\n                        name: `twitter:card`,\r\n                        content: `summary`,\r\n                    },\r\n                    {\r\n                        name: `twitter:creator`,\r\n                        content: meta.author,\r\n                    },\r\n                    {\r\n                        name: `twitter:title`,\r\n                        content: meta.title,\r\n                    },\r\n                    {\r\n                        name: `twitter:description`,\r\n                        content: meta.description,\r\n                    },\r\n                ].concat(meta)}\r\n            />\r\n            <Layout>\r\n                <ProjectTitle>\r\n                    {RichText.render(project.project_title)}\r\n                </ProjectTitle>\r\n                {project.project_hero_image && (\r\n                    <ProjectHeroContainer>\r\n                        <img src={project.project_hero_image.url} alt=\"bees\" />\r\n                    </ProjectHeroContainer>\r\n                )}\r\n                <ProjectBody>\r\n                    {RichText.render(project.project_description)}\r\n                    <WorkLink to={\"/work\"}>\r\n                        <Button className=\"Button--secondary\">\r\n                            See other work\r\n                        </Button>\r\n                    </WorkLink>\r\n                </ProjectBody>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ({ data }) => {\r\n    const projectContent = data.prismic.allProjects.edges[0].node;\r\n    const meta = data.site.siteMetadata;\r\n    return (\r\n        <Project project={projectContent} meta={meta}/>\r\n    )\r\n}\r\n\r\nProject.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n    query ProjectQuery($uid: String) {\r\n        prismic {\r\n            allProjects(uid: $uid) {\r\n                edges {\r\n                    node {\r\n                        project_title\r\n                        project_preview_description\r\n                        project_preview_thumbnail\r\n                        project_category\r\n                        project_post_date\r\n                        project_hero_image\r\n                        project_description\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`"],"sourceRoot":""}