{"version":3,"sources":["webpack:///./src/components/PostCard.jsx","webpack:///./src/pages/blog.js"],"names":["PostCardContainer","Link","colors","grey200","blue500","PostCategory","grey600","PostTitle","PostMetas","PostAuthor","PostDate","PostDescription","PostCardAction","PostCard","author","category","date","title","description","uid","className","to","text","RichText","render","format","BlogTitle","BlogGrid","dimensions","maxwidthMobile","Blog","posts","meta","titleTemplate","name","content","property","concat","Layout","map","post","i","key","node","post_author","post_category","post_title","post_date","post_preview_description","_meta","data","prismic","allPosts","edges","site","siteMetadata"],"mappings":"0PAQA,IAAMA,EAAoB,YAAOC,OAAP,sBAAH,oBACCC,IAAOC,QADR,gUAiBFD,IAAOE,QAjBL,yHA6BjBC,EAAe,YAAO,KAAP,sBAAH,yBAELH,IAAOI,QAFF,KAKZC,EAAY,YAAO,KAAP,sBAAH,sDAKTC,EAAY,YAAO,MAAP,sBAAH,yGAMFN,IAAOI,QANL,KASTG,EAAa,YAAO,MAAP,sBAAH,qCAIVC,EAAW,YAAO,MAAP,sBAAH,qCAIRC,EAAkB,YAAO,MAAP,sBAAH,qFASfC,EAAiB,YAAO,MAAP,sBAAH,iOAuCLC,EAzBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,YAAaC,EAA/C,EAA+CA,IAA/C,OACb,YAACnB,EAAD,CAAmBoB,UAAU,eAAeC,GAAE,SAAWF,GACrD,YAACd,EAAD,KACKU,EAAS,GAAGO,MAEjB,YAACf,EAAD,KACKU,EAAM,GAAGK,MAEd,YAACX,EAAD,KACKY,WAASC,OAAON,IAErB,YAACN,EAAD,CAAgBQ,UAAU,kBAA1B,aACc,8BAEd,YAACZ,EAAD,KACI,YAACC,EAAD,KACKK,GAEL,YAACJ,EAAD,KACI,YAAC,IAAD,CAAQe,OAAO,gBAAgBT,OCjG/C,IAAMU,EAAY,YAAO,KAAP,sBAAH,6CAITC,EAAW,YAAO,MAAP,sBAAH,iKAUUC,IAAWC,eAVrB,kDAgBRC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACT,8BACI,YAAC,IAAD,CACIf,MAAK,yCACLgB,cAAa,8CACbD,KAAM,CACF,CACIE,KAAK,cACLC,QAASH,EAAKd,aAElB,CACIkB,SAAS,WACTD,QAAQ,0CAEZ,CACIC,SAAS,iBACTD,QAASH,EAAKd,aAElB,CACIkB,SAAS,UACTD,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASH,EAAKlB,QAElB,CACIoB,KAAK,gBACLC,QAASH,EAAKf,OAElB,CACIiB,KAAK,sBACLC,QAASH,EAAKd,cAEpBmB,OAAOL,KAEb,YAACM,EAAA,EAAD,KACI,YAACZ,EAAD,aAGA,YAACC,EAAD,KACKI,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OACP,YAAC,EAAD,CACIC,IAAKD,EACL3B,OAAQ0B,EAAKG,KAAKC,YAClB7B,SAAUyB,EAAKG,KAAKE,cACpB5B,MAAOuB,EAAKG,KAAKG,WACjB9B,KAAMwB,EAAKG,KAAKI,UAChB7B,YAAasB,EAAKG,KAAKK,yBACvB7B,IAAKqB,EAAKG,KAAKM,MAAM9B,aAQ9B,sBAAe,IAAZ+B,EAAW,EAAXA,KACRnB,EAAQmB,EAAKC,QAAQC,SAASC,MAC9BrB,EAAOkB,EAAKI,KAAKC,aACvB,OAAKxB,EAGD,YAAC,EAAD,CAAMA,MAAOA,EAAOC,KAAMA,IAHX","file":"component---src-pages-blog-js-1dc8c764c13b734cf95a.js","sourcesContent":["import React from \"react\";\r\nimport Moment from 'react-moment';\r\nimport { Link } from \"gatsby\";\r\nimport { RichText } from \"prismic-reactjs\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"styles/colors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostCardContainer = styled(Link)`\r\n    border: 1px solid ${colors.grey200};\r\n    padding: 3em 2.5em 2.25em 2.5em;\r\n    border-radius: 3px;\r\n    text-decoration: none;\r\n    color: currentColor;\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\r\n    transition: all 150ms ease-in-out;\r\n\r\n    &:hover {\r\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\r\n        transition: all 150ms ease-in-out;\r\n        cursor: pointer;\r\n\r\n        .PostCardAction {\r\n            color: ${colors.blue500};\r\n            transition: all 150ms ease-in-out;\r\n\r\n            span {\r\n                transform: translateX(0px);\r\n                opacity: 1;\r\n                transition: transform 150ms ease-in-out;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst PostCategory = styled(\"h6\")`\r\n    font-weight: 600;\r\n    color: ${colors.grey600};\r\n`\r\n\r\nconst PostTitle = styled(\"h3\")`\r\n    margin: 0;\r\n    margin-top: 0.5em;\r\n`\r\n\r\nconst PostMetas = styled(\"div\")`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 1.5em;\r\n    justify-content: space-between;\r\n    font-size: 0.85em;\r\n    color: ${colors.grey600};\r\n`\r\n\r\nconst PostAuthor = styled(\"div\")`\r\n    margin: 0;\r\n`\r\n\r\nconst PostDate = styled(\"div\")`\r\n    margin: 0;\r\n`\r\n\r\nconst PostDescription = styled(\"div\")`\r\n    margin-top: 2em;\r\n    margin-bottom: 4em;\r\n\r\n    p:last-of-type {\r\n        margin: 0;\r\n    }\r\n`\r\n\r\nconst PostCardAction = styled(\"div\")`\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    color: currentColor;\r\n    transition: all 150ms ease-in-out;\r\n\r\n    span {\r\n        margin-left: 1em;\r\n        transform: translateX(-8px);\r\n        display: inline-block;\r\n        transition: transform 400ms ease-in-out;\r\n    }\r\n`\r\n\r\nconst PostCard = ({ author, category, date, title, description, uid}) => (\r\n    <PostCardContainer className=\"BlogPostCard\" to={`/blog/${uid}`}>\r\n        <PostCategory>\r\n            {category[0].text}\r\n        </PostCategory>\r\n        <PostTitle>\r\n            {title[0].text}\r\n        </PostTitle>\r\n        <PostDescription>\r\n            {RichText.render(description)}\r\n        </PostDescription>\r\n        <PostCardAction className=\"PostCardAction\">\r\n            Read more <span>&#8594;</span>\r\n        </PostCardAction>\r\n        <PostMetas>\r\n            <PostAuthor>\r\n                {author}\r\n            </PostAuthor>\r\n            <PostDate>\r\n                <Moment format=\"MMMM D, YYYY\">{date}</Moment>\r\n            </PostDate>\r\n        </PostMetas>\r\n    </PostCardContainer>\r\n)\r\n\r\nexport default PostCard;\r\n\r\nPostCard.propTypes = {\r\n    author: PropTypes.string.isRequired,\r\n    category: PropTypes.array.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    title: PropTypes.array.isRequired,\r\n    description: PropTypes.array.isRequired,\r\n    uid: PropTypes.string.isRequired\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport styled from \"@emotion/styled\";\r\nimport dimensions from \"styles/dimensions\";\r\nimport Layout from \"components/Layout\";\r\nimport PostCard from \"components/PostCard\";\r\n\r\nconst BlogTitle = styled(\"h1\")`\r\n    margin-bottom: 1em;\r\n`\r\n\r\nconst BlogGrid = styled(\"div\")`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 2.5em;\r\n\r\n    @media(max-width: 1050px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 1.5em;\r\n    }\r\n\r\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\r\n        grid-template-columns: 1fr;\r\n        grid-gap: 2.5em;\r\n    }\r\n`\r\n\r\nconst Blog = ({ posts, meta }) => (\r\n    <>\r\n        <Helmet\r\n            title={`Blog | Prist, Gatsby & Prismic Starter`}\r\n            titleTemplate={`%s | Blog | Prist, Gatsby & Prismic Starter`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: `Blog | Prist, Gatsby & Prismic Starter`,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: meta.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: meta.title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: meta.description,\r\n                },\r\n            ].concat(meta)}\r\n        />\r\n        <Layout>\r\n            <BlogTitle>\r\n                Blog\r\n            </BlogTitle>\r\n            <BlogGrid>\r\n                {posts.map((post, i) => (\r\n                    <PostCard\r\n                        key={i}\r\n                        author={post.node.post_author}\r\n                        category={post.node.post_category}\r\n                        title={post.node.post_title}\r\n                        date={post.node.post_date}\r\n                        description={post.node.post_preview_description}\r\n                        uid={post.node._meta.uid}\r\n                    />\r\n                ))}\r\n            </BlogGrid>\r\n        </Layout>\r\n    </>\r\n);\r\n\r\nexport default ({ data }) => {\r\n    const posts = data.prismic.allPosts.edges;\r\n    const meta = data.site.siteMetadata;\r\n    if (!posts) return null;\r\n\r\n    return (\r\n        <Blog posts={posts} meta={meta}/>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n    meta: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport const query = graphql`\r\n    {\r\n        prismic {\r\n            allPosts(sortBy: post_date_DESC) {\r\n                edges {\r\n                    node {\r\n                        post_title\r\n                        post_date\r\n                        post_category\r\n                        post_preview_description\r\n                        post_author\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n"],"sourceRoot":""}