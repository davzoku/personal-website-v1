{"version":3,"sources":["webpack:///./src/images/profile-photo.png","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["module","exports","AboutContainer","dimensions","maxwidthTablet","maxwidthMobile","AboutPhoto","AboutProfilePhoto","AboutBio","colors","blue500","blueMarine100","blueMarine600","AboutLinkContainer","AboutLink","About","bio","socialLinks","className","src","profilePhoto","RichText","render","map","social","i","key","href","about_link","spans","data","url","target","rel","text","Hero","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","Section","ProjectsAction","Link","RenderBody","home","projects","meta","title","titleTemplate","name","content","description","property","author","concat","hero_title","hero_button_link","Button","hero_button_text","about_title","about_bio","about_links","project","ProjectCard","category","node","project_category","project_title","project_preview_description","thumbnail","project_preview_thumbnail","uid","_meta","to","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","ButtonContainer","blue400","blue300","this","props","children","source","excluded","sourceKeys","Object","keys","length","indexOf","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-4a70881b5b76cbc2b9fc.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/profile-photo-8984ad3e0ccdd437a13563a5cbe4314e.png\";","import React from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport dimensions from \"styles/dimensions\"\r\nimport { RichText } from \"prismic-reactjs\"\r\nimport PropTypes from \"prop-types\"\r\nimport profilePhoto from \"images/profile-photo.png\"\r\nimport colors from \"styles/colors\"\r\n\r\nconst AboutContainer = styled(\"div\")`\r\n  padding-top: 1em;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-column-gap: 3em;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    grid-column-gap: 2em;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    grid-column-gap: 1em;\r\n  }\r\n`\r\n\r\nconst AboutPhoto = styled(\"div\")`\r\n  padding-top: 1em;\r\n  padding-bottom: 3em;\r\n  margin: auto;\r\n  grid-area: 1 / 1 / 2 / 3;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    grid-area: 1 / 1 / 2 / 4;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    grid-area: 1 / 1 / 2 / 4;\r\n  }\r\n`\r\n\r\nconst AboutProfilePhoto = styled(\"img\")`\r\n  width: 100%;\r\n`\r\n\r\nconst AboutBio = styled(\"div\")`\r\n  padding-bottom: 3em;\r\n  grid-area: 1 / 3 / 2 / 7;\r\n\r\n  a {\r\n    margin-bottom: 1.5em;\r\n    font-weight: 600;\r\n    line-height: 1.9;\r\n    text-decoration: none;\r\n    color: ${colors.blue500};\r\n  }\r\n\r\n  a:hover {\r\n    color: white;\r\n    background: linear-gradient(\r\n      135deg,\r\n      ${colors.blueMarine100} 0%,\r\n      ${colors.blueMarine600} 100%\r\n    );\r\n  }\r\n\r\n  ul {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, minmax(140px, 200px));\r\n    padding: 0;\r\n    margin: 20px 0 0 0;\r\n    overflow: hidden;\r\n    list-style: none;\r\n  }\r\n  li {\r\n    position: relative;\r\n    margin-bottom: 10px;\r\n    padding-left: 20px;\r\n    font-size: 0.85em;\r\n    &:before {\r\n      content: \"â–¹\";\r\n      position: absolute;\r\n      left: 0;\r\n      color: ${colors.blue500};\r\n      font-size: 1.5em;\r\n      line-height: 18px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    grid-area: 2 / 1 / 3 / 3;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    grid-area: 2 / 1 / 3 / 3;\r\n    ul {\r\n      display: grid;\r\n      grid-template-columns: 1fr;\r\n      padding: 0;\r\n      margin: 20px 0 0 0;\r\n      overflow: hidden;\r\n      list-style: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst AboutLinkContainer = styled(\"div\")`\r\n  padding-top: 1em;\r\n  padding-bottom: 3em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-area: 1 / 7 / 2 / 8;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    grid-area: 2 / 3 / 3 / 4;\r\n    padding-left: 3em;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    grid-area: 2 / 3 / 3 / 4;\r\n  }\r\n`\r\n\r\nconst AboutLink = styled(\"a\")`\r\n  margin-bottom: 1.5em;\r\n  font-weight: 600;\r\n  line-height: 1.9;\r\n  text-decoration: none;\r\n  color: currentColor;\r\n\r\n  span {\r\n    margin-left: 1em;\r\n    transform: translateX(-8px);\r\n    display: inline-block;\r\n    opacity: 0;\r\n    transition: all 400ms ease-in-out;\r\n  }\r\n\r\n  &:hover {\r\n    span {\r\n      transform: translateX(0px);\r\n      opacity: 1;\r\n      transition: all 150ms ease-in-out;\r\n    }\r\n  }\r\n`\r\n\r\nconst About = ({ bio, socialLinks }) => (\r\n  <AboutContainer>\r\n    <AboutPhoto>\r\n      <AboutProfilePhoto className=\"ProfilePhoto\" src={profilePhoto} />\r\n    </AboutPhoto>\r\n    <AboutBio>{RichText.render(bio)}</AboutBio>\r\n    <AboutLinkContainer>\r\n      {socialLinks.map((social, i) => (\r\n        <AboutLink\r\n          key={i}\r\n          href={social.about_link[0].spans[0].data.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {social.about_link[0].text}\r\n          <span>&#8594;</span>\r\n        </AboutLink>\r\n      ))}\r\n    </AboutLinkContainer>\r\n  </AboutContainer>\r\n)\r\n\r\nexport default About\r\n\r\nAbout.propTypes = {\r\n  bio: PropTypes.array.isRequired,\r\n  socialLinks: PropTypes.array.isRequired,\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { RichText } from \"prismic-reactjs\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\nimport colors from \"styles/colors\"\r\nimport dimensions from \"styles/dimensions\"\r\nimport Button from \"components/_ui/Button\"\r\nimport About from \"components/About\"\r\nimport Layout from \"components/Layout\"\r\nimport ProjectCard from \"components/ProjectCard\"\r\n\r\nconst Hero = styled(\"div\")`\r\n  padding-top: 2.5em;\r\n  padding-bottom: 3em;\r\n  margin-bottom: 6em;\r\n  max-width: 830px;\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    margin-bottom: 3em;\r\n  }\r\n\r\n  h1 {\r\n    margin-bottom: 1em;\r\n\r\n    a {\r\n      text-decoration: none;\r\n      transition: all 100ms ease-in-out;\r\n\r\n      &:nth-of-type(1) {\r\n        color: ${colors.blue500};\r\n      }\r\n      &:nth-of-type(2) {\r\n        color: ${colors.orange500};\r\n      }\r\n      &:nth-of-type(3) {\r\n        color: ${colors.purple500};\r\n      }\r\n      &:nth-of-type(4) {\r\n        color: ${colors.green500};\r\n      }\r\n      &:nth-of-type(5) {\r\n        color: ${colors.teal500};\r\n      }\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n        transition: all 100ms ease-in-out;\r\n\r\n        &:nth-of-type(1) {\r\n          color: ${colors.blue600};\r\n          background-color: ${colors.blue200};\r\n        }\r\n        &:nth-of-type(2) {\r\n          color: ${colors.orange600};\r\n          background-color: ${colors.orange200};\r\n        }\r\n        &:nth-of-type(3) {\r\n          color: ${colors.purple600};\r\n          background-color: ${colors.purple200};\r\n        }\r\n        &:nth-of-type(4) {\r\n          color: ${colors.green600};\r\n          background-color: ${colors.green200};\r\n        }\r\n        &:nth-of-type(5) {\r\n          color: ${colors.teal600};\r\n          background-color: ${colors.teal200};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Section = styled(\"div\")`\r\n  margin-bottom: 10em;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    margin-bottom: 4em;\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ProjectsAction = styled(Link)`\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: currentColor;\r\n  transition: all 150ms ease-in-out;\r\n  margin-left: auto;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  span {\r\n    margin-left: 1em;\r\n    transform: translateX(-8px);\r\n    display: inline-block;\r\n    transition: transform 400ms ease-in-out;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${colors.blue500};\r\n    transition: all 150ms ease-in-out;\r\n\r\n    span {\r\n      transform: translateX(0px);\r\n      opacity: 1;\r\n      transition: transform 150ms ease-in-out;\r\n    }\r\n  }\r\n`\r\n\r\nconst RenderBody = ({ home, projects, meta }) => (\r\n  <>\r\n    <Helmet\r\n      title={meta.title}\r\n      titleTemplate={`%s | ${meta.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: meta.description,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: meta.title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: meta.description,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: meta.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: meta.title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: meta.description,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n    <Hero>\r\n      <>{RichText.render(home.hero_title)}</>\r\n      <a\r\n        href={home.hero_button_link.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <Button>{RichText.render(home.hero_button_text)}</Button>\r\n      </a>\r\n    </Hero>\r\n    <Section>\r\n      {RichText.render(home.about_title)}\r\n      <About bio={home.about_bio} socialLinks={home.about_links} />\r\n    </Section>\r\n    <Section>\r\n      {projects.map((project, i) => (\r\n        <ProjectCard\r\n          key={i}\r\n          category={project.node.project_category}\r\n          title={project.node.project_title}\r\n          description={project.node.project_preview_description}\r\n          thumbnail={project.node.project_preview_thumbnail}\r\n          uid={project.node._meta.uid}\r\n        />\r\n      ))}\r\n      <ProjectsAction to={\"/projects\"}>\r\n        See more projects <span>&#8594;</span>\r\n      </ProjectsAction>\r\n    </Section>\r\n  </>\r\n)\r\n\r\nexport default ({ data }) => {\r\n  //Required check for no data being returned\r\n  const doc = data.prismic.allHomepages.edges.slice(0, 1).pop()\r\n  const projects = data.prismic.allProjects.edges\r\n  const meta = data.site.siteMetadata\r\n\r\n  if (!doc || !projects) return null\r\n\r\n  return (\r\n    <Layout>\r\n      <RenderBody home={doc.node} projects={projects} meta={meta} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nRenderBody.propTypes = {\r\n  home: PropTypes.object.isRequired,\r\n  projects: PropTypes.array.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const query = graphql`\r\n  {\r\n    prismic {\r\n      allHomepages {\r\n        edges {\r\n          node {\r\n            hero_title\r\n            hero_button_text\r\n            hero_button_link {\r\n              ... on PRISMIC__ExternalLink {\r\n                _linkType\r\n                url\r\n              }\r\n            }\r\n            content\r\n            about_title\r\n            about_bio\r\n            about_links {\r\n              about_link\r\n            }\r\n          }\r\n        }\r\n      }\r\n      allProjects {\r\n        edges {\r\n          node {\r\n            project_title\r\n            project_preview_description\r\n            project_preview_thumbnail\r\n            project_category\r\n            project_post_date\r\n            _meta {\r\n              uid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React, { Component } from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport colors from \"styles/colors\"\r\nimport dimensions from \"styles/dimensions\"\r\n\r\nconst ButtonContainer = styled(\"button\")`\r\n  padding: 1em 2em;\r\n  background: ${colors.blue400};\r\n  font-weight: 600;\r\n  color: white;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1rem;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  transition: background 100ms ease-in-out;\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    padding: 0.8em 1.8em;\r\n    font-size: 1em;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      135deg,\r\n      ${colors.blueMarine100} 0%,\r\n      ${colors.blueMarine600} 100%\r\n    );\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: transparent;\r\n    transition: background 100ms ease-in-out;\r\n  }\r\n\r\n  &.Button--secondary {\r\n    background: ${colors.blue200};\r\n    color: ${colors.blue600};\r\n    padding: 0.95em 1.8em;\r\n    font-size: 0.95rem;\r\n\r\n    &:hover {\r\n      background: ${colors.blue300};\r\n      transition: background 100ms ease-in-out;\r\n    }\r\n  }\r\n`\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { children, ...props } = this.props\r\n    return (\r\n      <ButtonContainer onClick={this.props.onClick} {...props}>\r\n        {this.props.children}\r\n      </ButtonContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}