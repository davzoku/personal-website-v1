{"version":3,"sources":["webpack:///./src/pages/work.js"],"names":["WorkTitle","Work","projects","meta","title","titleTemplate","name","content","description","property","author","concat","map","project","i","key","category","node","project_category","project_title","project_preview_description","thumbnail","project_preview_thumbnail","uid","_meta","data","prismic","allProjects","edges","site","siteMetadata"],"mappings":"iMAQA,IAAMA,EAAY,YAAO,KAAP,sBAAH,6CAITC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACT,8BACI,YAAC,IAAD,CACIC,MAAK,yCACLC,cAAa,8CACbF,KAAM,CACF,CACIG,KAAK,cACLC,QAASJ,EAAKK,aAElB,CACIC,SAAS,WACTF,QAAQ,0CAEZ,CACIE,SAAS,iBACTF,QAASJ,EAAKK,aAElB,CACIC,SAAS,UACTF,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASJ,EAAKO,QAElB,CACIJ,KAAK,gBACLC,QAASJ,EAAKC,OAElB,CACIE,KAAK,sBACLC,QAASJ,EAAKK,cAEpBG,OAAOR,KAEb,YAAC,IAAD,KACI,YAACH,EAAD,aAGA,8BACKE,EAASU,KAAI,SAACC,EAASC,GAAV,OACV,YAAC,IAAD,CACIC,IAAKD,EACLE,SAAUH,EAAQI,KAAKC,iBACvBd,MAAOS,EAAQI,KAAKE,cACpBX,YAAaK,EAAQI,KAAKG,4BAC1BC,UAAWR,EAAQI,KAAKK,0BACxBC,IAAKV,EAAQI,KAAKO,MAAMD,aAQjC,sBAAe,IAAZE,EAAW,EAAXA,KACRvB,EAAWuB,EAAKC,QAAQC,YAAYC,MACpCzB,EAAOsB,EAAKI,KAAKC,aACvB,OAAK5B,EAGD,YAACD,EAAD,CAAMC,SAAUA,EAAUC,KAAMA,IAHd","file":"component---src-pages-work-js-68c2f5bd71f661a7b791.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport styled from \"@emotion/styled\";\r\nimport Layout from \"components/Layout\";\r\nimport ProjectCard from \"components/ProjectCard\";\r\n\r\nconst WorkTitle = styled(\"h1\")`\r\n    margin-bottom: 1em;\r\n`\r\n\r\nconst Work = ({ projects, meta }) => (\r\n    <>\r\n        <Helmet\r\n            title={`Work | Prist, Gatsby & Prismic Starter`}\r\n            titleTemplate={`%s | Work | Prist, Gatsby & Prismic Starter`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: `Work | Prist, Gatsby & Prismic Starter`,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: meta.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: meta.title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: meta.description,\r\n                },\r\n            ].concat(meta)}\r\n        />\r\n        <Layout>\r\n            <WorkTitle>\r\n                Work\r\n            </WorkTitle>\r\n            <>\r\n                {projects.map((project, i) => (\r\n                    <ProjectCard\r\n                        key={i}\r\n                        category={project.node.project_category}\r\n                        title={project.node.project_title}\r\n                        description={project.node.project_preview_description}\r\n                        thumbnail={project.node.project_preview_thumbnail}\r\n                        uid={project.node._meta.uid}\r\n                    />\r\n                ))}\r\n            </>\r\n        </Layout>\r\n    </>\r\n);\r\n\r\nexport default ({ data }) => {\r\n    const projects = data.prismic.allProjects.edges;\r\n    const meta = data.site.siteMetadata;\r\n    if (!projects) return null;\r\n\r\n    return (\r\n        <Work projects={projects} meta={meta}/>\r\n    )\r\n}\r\n\r\nWork.propTypes = {\r\n    projects: PropTypes.array.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n    {\r\n        prismic {\r\n            allProjects {\r\n                edges {\r\n                    node {\r\n                        project_title\r\n                        project_preview_description\r\n                        project_preview_thumbnail\r\n                        project_category\r\n                        project_post_date\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n"],"sourceRoot":""}