{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["PostHeroContainer","PostHeroAnnotation","colors","grey600","PostCategory","PostTitle","PostBody","PostMetas","PostAuthor","PostDate","Post","post","meta","title","post_title","text","titleTemplate","name","content","description","property","author","concat","RichText","render","post_category","post_author","format","post_date","post_hero_image","src","url","alt","post_hero_annotation","post_body","data","postContent","prismic","allPosts","edges","node","site","siteMetadata"],"mappings":"oOAUA,IAAMA,EAAoB,YAAO,MAAP,sBAAH,0JAajBC,EAAqB,YAAO,MAAP,sBAAH,gDAKPC,IAAOC,QALA,8DAelBC,EAAe,YAAO,MAAP,sBAAH,yEAKLF,IAAOC,QALF,wCAaZE,EAAY,YAAO,MAAP,sBAAH,6FAUTC,EAAW,YAAO,MAAP,sBAAH,0HAcRC,EAAY,YAAO,MAAP,sBAAH,wIAQFL,IAAOC,QARL,KAWTK,EAAa,YAAO,MAAP,sBAAH,qCAIVC,EAAW,YAAO,MAAP,sBAAH,qCAIRC,EAAO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClB,OACI,8BACI,YAAC,IAAD,CACIC,MAAUF,EAAKG,WAAW,GAAGC,KAAxB,qCACLC,cAAa,QAAUJ,EAAKC,MAC5BD,KAAM,CACF,CACIK,KAAK,cACLC,QAASN,EAAKO,aAElB,CACIC,SAAS,WACTF,QAAYP,EAAKG,WAAW,GAAGC,KAAxB,sCAEX,CACIK,SAAS,iBACTF,QAASN,EAAKO,aAElB,CACIC,SAAS,UACTF,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASN,EAAKS,QAElB,CACIJ,KAAK,gBACLC,QAASN,EAAKC,OAElB,CACII,KAAK,sBACLC,QAASN,EAAKO,cAEpBG,OAAOV,KAEb,YAAC,IAAD,KACI,YAACR,EAAD,KACKmB,WAASC,OAAOb,EAAKc,gBAE1B,YAACpB,EAAD,KACKkB,WAASC,OAAOb,EAAKG,aAE1B,YAACP,EAAD,KACI,YAACC,EAAD,KACKG,EAAKe,aAEV,YAACjB,EAAD,KACI,YAAC,IAAD,CAAQkB,OAAO,gBAAgBhB,EAAKiB,aAGvCjB,EAAKkB,iBACN,YAAC7B,EAAD,KACI,mBAAK8B,IAAKnB,EAAKkB,gBAAgBE,IAAKC,IAAI,SACxC,YAAC/B,EAAD,KACKsB,WAASC,OAAOb,EAAKsB,wBAIlC,YAAC3B,EAAD,KACKiB,WAASC,OAAOb,EAAKuB,eAO3B,sBAAe,IAAZC,EAAW,EAAXA,KACRC,EAAcD,EAAKE,QAAQC,SAASC,MAAM,GAAGC,KAC7C5B,EAAOuB,EAAKM,KAAKC,aACvB,OACI,YAAChC,EAAD,CAAMC,KAAMyB,EAAaxB,KAAMA","file":"component---src-templates-post-jsx-e4245c94d65a93a622bb.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport Moment from 'react-moment';\r\nimport { graphql } from 'gatsby';\r\nimport { RichText } from \"prismic-reactjs\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"styles/colors\";\r\nimport Layout from \"components/Layout\";\r\n\r\nconst PostHeroContainer = styled(\"div\")`\r\n    max-height: 500px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    margin-bottom: 3em;\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst PostHeroAnnotation = styled(\"div\")`\r\n    padding-top: 0.25em;\r\n\r\n    h6 {\r\n        text-align: right;\r\n        color: ${colors.grey600};\r\n        font-weight: 400;\r\n        font-size: 0.85rem;\r\n    }\r\n\r\n    a {\r\n        color: currentColor;\r\n    }\r\n`\r\n\r\nconst PostCategory = styled(\"div\")`\r\n    max-width: 550px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    font-weight: 600;\r\n    color: ${colors.grey600};\r\n\r\n    h5 {\r\n        margin-top: 0;\r\n        margin-bottom: 1em;\r\n    }\r\n`\r\n\r\nconst PostTitle = styled(\"div\")`\r\n    max-width: 550px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n\r\n    h1 {\r\n        margin-top: 0;\r\n    }\r\n`\r\n\r\nconst PostBody = styled(\"div\")`\r\n    max-width: 550px;\r\n    margin: 0 auto;\r\n\r\n    .block-img {\r\n        margin-top: 3.5em;\r\n        margin-bottom: 0.5em;\r\n\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nconst PostMetas = styled(\"div\")`\r\n    max-width: 550px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 2em;\r\n    justify-content: space-between;\r\n    font-size: 0.85em;\r\n    color: ${colors.grey600};\r\n`\r\n\r\nconst PostAuthor = styled(\"div\")`\r\n    margin: 0;\r\n`\r\n\r\nconst PostDate = styled(\"div\")`\r\n    margin: 0;\r\n`\r\n\r\nconst Post = ({ post, meta }) => {\r\n    return (\r\n        <>\r\n            <Helmet\r\n                title={`${post.post_title[0].text} | Prist, Gatsby & Prismic Starter`}\r\n                titleTemplate={`%s | ${meta.title}`}\r\n                meta={[\r\n                    {\r\n                        name: `description`,\r\n                        content: meta.description,\r\n                    },\r\n                    {\r\n                        property: `og:title`,\r\n                        content: `${post.post_title[0].text} | Prist, Gatsby & Prismic Starter`,\r\n                    },\r\n                    {\r\n                        property: `og:description`,\r\n                        content: meta.description,\r\n                    },\r\n                    {\r\n                        property: `og:type`,\r\n                        content: `website`,\r\n                    },\r\n                    {\r\n                        name: `twitter:card`,\r\n                        content: `summary`,\r\n                    },\r\n                    {\r\n                        name: `twitter:creator`,\r\n                        content: meta.author,\r\n                    },\r\n                    {\r\n                        name: `twitter:title`,\r\n                        content: meta.title,\r\n                    },\r\n                    {\r\n                        name: `twitter:description`,\r\n                        content: meta.description,\r\n                    },\r\n                ].concat(meta)}\r\n            />\r\n            <Layout>\r\n                <PostCategory>\r\n                    {RichText.render(post.post_category)}\r\n                </PostCategory>\r\n                <PostTitle>\r\n                    {RichText.render(post.post_title)}\r\n                </PostTitle>\r\n                <PostMetas>\r\n                    <PostAuthor>\r\n                        {post.post_author}\r\n                    </PostAuthor>\r\n                    <PostDate>\r\n                        <Moment format=\"MMMM D, YYYY\">{post.post_date}</Moment>\r\n                    </PostDate>\r\n                </PostMetas>\r\n                    {post.post_hero_image && (\r\n                    <PostHeroContainer>\r\n                        <img src={post.post_hero_image.url} alt=\"bees\" />\r\n                        <PostHeroAnnotation>\r\n                            {RichText.render(post.post_hero_annotation)}\r\n                        </PostHeroAnnotation>\r\n                    </PostHeroContainer>\r\n                )}\r\n                <PostBody>\r\n                    {RichText.render(post.post_body)}\r\n                </PostBody>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ({ data }) => {\r\n    const postContent = data.prismic.allPosts.edges[0].node;\r\n    const meta = data.site.siteMetadata;\r\n    return (\r\n        <Post post={postContent} meta={meta}/>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    meta: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n    query PostQuery($uid: String) {\r\n        prismic {\r\n            allPosts(uid: $uid) {\r\n                edges {\r\n                    node {\r\n                        post_title\r\n                        post_hero_image\r\n                        post_hero_annotation\r\n                        post_date\r\n                        post_category\r\n                        post_body\r\n                        post_author\r\n                        post_preview_description\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`"],"sourceRoot":""}